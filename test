class chatbox {
  
    constructor(chatTarget, chatWindow, chatHeader, messages, messageContainer, chatButton) {
      const messageElement = '';
      
      chatTarget.addEventListener('click', () => {
        let notificationIcon = document.querySelector('.c-chat-window__notification');
        notificationIcon.classList.add('c-chat-window--hide');
        this.expand(chatWindow, chatTarget);
      });
      
      chatHeader.addEventListener('click', () => {
        this.minimise(chatWindow, chatTarget);
      });
      
      
      // Send the messages from botman 2 seconds after initialisation
     setTimeout(() => {
        this.notification();
        this.displayMessages(messages);
      }, 2000);
      
      
      chatButton.addEventListener('click', () => {
        let sentMessage = document.querySelector('.c-chat-window__text-box');
        this.sendMessage(sentMessage, messages);
      })
      
    }
    
    expand(window, target) {
      window.classList.toggle('c-chat-window--hide');
      target.classList.toggle('c-chat-window--hide');
    }
    
    minimise(window, target) {
      window.classList.toggle('c-chat-window--hide');
      target.classList.toggle('c-chat-window--hide');
    }
    
    addMessage(message) {
      this.buildMessageElement(message)
    }
    
    displayMessages(messages) {
      messages.forEach(message => {
        this.buildMessageElement(message);
      });
    }
    
    buildMessageElement(message) {
      this.messageElement = '<p class="c-chat-window__message ';
      this.messageElement += message.sent ? 'c-chat-window__message--sent' : 'c-chat-window__message--received';
      this.messageElement += '">'
      this.messageElement += message.message;
      this.messageElement += '</p>';
      messageContainer.innerHTML += this.messageElement;
    }
    
    sendMessage(sentMessage, messages) {
      let newMessage = { 
        'message':sentMessage.value,
        'sent': true
      };
      messages.push(newMessage);
      sentMessage.value = '';
      this.addMessage(newMessage);
    }
    
    notification() {
      let notificationIcon = document.querySelector('.c-chat-window__notification');
      notificationIcon.classList.remove('c-chat-window--hide');
    }
  }
  
  let chatTarget = document.querySelector('.c-chat-window__target');
  let chatWindow = document.querySelector('.c-chat-window');
  let chatHeader = document.querySelector('.c-chat-window__header');
  let messageContainer = document.querySelector('.c-chat-window__messages');
  let chatButton = document.querySelector('.c-chat-window__button');
  
  
  let messages = [
    {'message': 'Hello my name is Botman, how can I help you?', 'sent': false},
    {'message': 'Ask me anything you would like', 'sent': false}
  ]
  
  new chatbox(chatTarget, chatWindow, chatHeader, messages, messageContainer, chatButton);
  


<main>
        <div class="c-chat-window__container">
          <div class="c-chat-window__target">Botman</div>
      
          <div class="c-chat-window__notification c-chat-window--hide"></div>
          <div class="c-chat-window c-chat-window--hide"> 
            <div class="c-chat-window__header">Botman</div>
            <div class="c-chat-window__messages">
            </div>
            <div class="c-chat-window__compose">
              <input type="text" class="c-chat-window__text-box" placeholder="Write message...">  
              <button class="c-chat-window__button" type="submit">Send
              </button>
            </div>
          </div>
        </div>
      </main>



* {
    box-sizing: border-box;
  }
  
  body {
    margin: 0;
    height: 100%;
    font-family: arial;
    font-size: 62.5%;
  }
  
  .c-chat-window {
    height: 300px;
    width: 250px;
    position: relative;
    border-top-left-radius: 5px;
    border-top-right-radius: 5px;
    font-size: 12px;
   
    &__messages {
      border: 1px solid lightgrey;
      border-top: 0;
      border-bottom: 0;
      height: calc(100% - 68px);
      overflow-y: scroll;
      padding: 0 10px;
      position:absolute;
      top: 34px;
      line-height: 1.4;
      width: 100%;
    }
    
    &__compose {
      position: absolute;
      bottom: 0;
      left: 0;
      right: 0;
      display: flex;
      border: none;
    }
    
    &__text-box {
      flex: initial;
      height: 40px;
      width: 100%;
      border:0;
      border-top: 1px solid lightgrey;
      border-left: 1px solid lightgrey;
      padding: 0 10px;
    }
    
    &__button {
      border: none;
      background: orangered;
      padding:  0 15px;
      color: white;
    }
    
    &__container {
      position: absolute;
      bottom: 0;
      right: 50px;  
    }
    
    &__header {
      background: orangered;
      border-bottom: 1px solid white;
      color: white;
      cursor: pointer;
      padding: 10px;
      top: 0;
      left: 0;
      right: 0;
      position: absolute;
      border-top-left-radius: 5px;
      border-top-right-radius: 5px;
      z-index: 10;
    }
    
    &__target {
      height: 40px;
      background: orangered;
      cursor: pointer;
      color: #fff;
      display: flex;
      align-items: center;
      justify-content: center;
      font-size: 12px;
      padding: 0 25px;
    }
    
    &__message {
      padding: 10px;
      border-radius: 10px;
      width: 80%;
      
      &--sent {
        background: orangered;
        color: white;
        margin-left: auto;
      }
      
      &--received {
        background: lightgrey;
        margin-right: auto;
      }
    }
    
    &__notification {
      background: dodgerblue;
      border-radius: 50%;
      height: 20px;
      width: 20px;
      position: absolute;
      z-index: 15;
      right: 0;
      top: -15px;
      display:flex;
      
      &::after {
        content: '';
        display:inline-block;
        margin: auto;
        height:5px;
        width:5px;
        background-color: white;
        position: absolute;
        left: calc(50% - 2.5px);
        top: calc(50% - 2.5px);
      }
    }
    
    &--hide {
      display: none;
    }
  }

